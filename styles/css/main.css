/* Set up a box model on the root element */
html {
  box-sizing: border-box;
}

/*
  1. Make all elements inherit the box-sizing property
  2. Remove default margin and padding
*/
*,
*::before,
*::after {
  box-sizing: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 2 */
}

/* Remove default list styles */
li {
  list-style: none;
}

/* Remove default link styles */
a {
  text-decoration: none;
  color: inherit;
}

/*
  1. Use the primary font family
  2. Set font size to 2rem
*/
h1 {
  font-family: "Lobster", cursive; /* 1 */
  font-size: 2rem; /* 2 */
}

/*
  1. Use the secondary font family
  2. Set font size to 1.5rem
*/
h2 {
  font-family: "Martian Mono", monospace; /* 1 */
  font-size: 1.5rem; /* 2 */
}

/*
  1. Use the tertiary font family
  2. Set font size to 1rem
*/
p {
  font-family: "Roboto", Arial, sans-serif; /* 1 */
  font-size: 1rem; /* 2 */
}

/*
  1. Use the secondary font family
  2. Set font size to 1rem and a lighter font weight (300)
  3. Transform the text to uppercase
*/
a {
  font-family: "Martian Mono", monospace; /* 1 */
  font-size: 1rem; /* 2 */
  font-weight: 300; /* 2 */
  text-transform: uppercase; /* 3 */
}

/*
  1. Set a default text color
*/
body {
  color: #0F0F0F; /* 1 */
}

.grid-container {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
}

.grid-span-1 {
  grid-column: span 1;
}

.grid-span-2 {
  grid-column: span 2;
}

.grid-span-3 {
  grid-column: span 3;
}

.grid-span-4 {
  grid-column: span 4;
}

.grid-span-5 {
  grid-column: span 5;
}

.grid-span-6 {
  grid-column: span 6;
}

.grid-span-7 {
  grid-column: span 7;
}

.grid-span-8 {
  grid-column: span 8;
}

.grid-span-9 {
  grid-column: span 9;
}

.grid-span-10 {
  grid-column: span 10;
}

.grid-span-11 {
  grid-column: span 11;
}

.grid-span-12 {
  grid-column: span 12;
}

/*
  1. Make the navigation bar fixed to the top
  2. Set the z-index to 100 to ensure it's on top of other elements
  3. Use flex for the nav element layout
  4. Justify content to separate the logo and the ul elements
  5. Set the width to 100% to span the entire viewport and subtract 30px for margin
  6. Add padding and margin to make it more visually appealing
  7. Apply the glassmorphism effect to the navigation bar
*/
nav {
  position: fixed; /* 1 */
  top: 0; /* 1 */
  z-index: 100; /* 2 */
  display: flex; /* 3 */
  justify-content: space-between; /* 4 */
  width: calc(100% - 30px); /* 5 */
  margin: 15px; /* 6 */
  padding: 25px; /* 6 */
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 15px;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  /* 7 */
  /*
    1. Use flex for the ul element layout
    2. Align items (vertically) to the center
    3. Set the gap between items to 50px
  */
}
nav ul {
  display: flex; /* 1 */
  align-items: center; /* 2 */
  gap: 50px; /* 3 */
  /*
    1. Hide home button when the page is loaded
  */
}
nav ul #home-button {
  display: none; /* 1 */
}

/*
  1. Set the position of the coming-soon section to relative
  2. Create a column layout and center the content
  3. Make the coming-soon section span the entire viewport height
  4. Set the background color to a medium gray
*/
.coming-soon {
  position: relative; /* 1 */
  display: flex;
  flex-direction: column;
  /* 2 */
  display: flex;
  align-items: center;
  justify-content: center;
  /* 2 */
  height: 100vh; /* 3 */
  background-color: rgb(128, 128, 128); /* 4 */
  /*
    1. Set the position to absolute and place it behind the glassmorphism effect
    2. Set the font size to 20rem
    3. Set the text color to a light gray
  */
  /*
    1. Place the h2 element on top of the glassmorphism effect
    2. Add some margin to the top of the h2 element
    3. Set the font size to 2.5rem and text color to white
  */
  /* Create a glassmorphism effect */
}
.coming-soon h1 {
  position: absolute; /* 1 */
  z-index: 1; /* 1 */
  font-size: 20rem; /* 2 */
  color: rgb(175, 175, 175); /* 3 */
}
.coming-soon h2 {
  z-index: 3; /* 1 */
  margin-top: 5rem; /* 2 */
  font-size: 2.5rem; /* 3 */
  color: #F5F5F5; /* 3 */
}
.coming-soon::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
}

/*
  1. Add padding to make it clickable and aesthetically pleasing
  2. Add a border for a button-like appearance
  3. Add a border radius to make it more visually appealing
  4. Add a box shadow for a 3D effect
*/
a {
  padding: 0.5rem 1.5rem; /* 1 */
  border: 2px solid #0F0F0F; /* 2 */
  border-radius: 1.5rem; /* 3 */
  box-shadow: 0 10px 25px rgba(15, 15, 15, 0.15); /* 4 */
  background-color: #F5F5F5;
  /*
    1. Switch the text and background colors on hover
  */
}
a:hover {
  color: #F5F5F5; /* 1 */
  background-color: #0F0F0F; /* 1 */
}

/*
  1. Make the home section span the entire viewport height
*/
#home {
  height: 100vh; /* 1 */
  /*
    1. Use flex and layout the elements in a column
    2. Center the elements vertically
    3. Add some padding
  */
}
#home .txt {
  display: flex;
  flex-direction: column;
  /* 1 */
  display: flex;
  justify-content: center;
  /* 2 */
  padding: 50px; /* 3 */
}
#home .txt h1 {
  font-size: 5rem;
}
#home .txt .bio {
  margin: 25px 0 40px;
}
#home .txt .bio p {
  margin-top: 25px;
}
#home .txt a {
  align-self: flex-start;
}
#home .img {
  display: flex;
  align-items: center;
  justify-content: center;
}
#home .img img {
  width: 450px;
  height: 450px;
  object-fit: cover;
  border-radius: 50% 0 50% 0;
}

/*# sourceMappingURL=main.css.map */
